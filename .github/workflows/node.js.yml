name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]

    services:
      mongodb:
        image: mongo:latest
        env:
          MONGO_INITDB_ROOT_USERNAME: admin
          MONGO_INITDB_ROOT_PASSWORD: secret
        ports:
          - 27017:27017
        options: >-
          --health-cmd "mongosh --eval 'db.runCommand({ ping: 1 })'" 
          --health-interval 10s 
          --health-timeout 5s 
          --health-retries 5

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: ./Backend/package-lock.json

    - name: Install Dependencies
      run: npm ci
      working-directory: ./Backend

    - name: Wait for MongoDB to be Ready
      run: |
        echo "ðŸ•’ Attente de MongoDB..."
        for i in {1..30}; do
          if mongosh "mongodb://admin:secret@localhost:27017" --eval "db.runCommand({ ping: 1 })" &>/dev/null; then
            echo "MongoDB est prÃªt !"
            exit 0
          fi
          echo MongoDB pas encore prÃªt... Attente de 2s"
          sleep 2
        done
        echo "MongoDB n'a pas dÃ©marrÃ© Ã  temps."
        exit 1

    - name: Run Tests
      run: NODE_OPTIONS='--experimental-vm-modules' npx jest --runInBand
      working-directory: ./Backend
      env:
        MONGO_URI: mongodb://admin:secret@localhost:27017/testdb
