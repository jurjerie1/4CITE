name: Node.js CI
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
      
    - name: Start MongoDB Container
      run: docker run -d --name mongodb -p 27017:27017 -e MONGO_INITDB_ROOT_USERNAME=admin -e MONGO_INITDB_ROOT_PASSWORD=secret -v mongodb_data:/data/db mongo:latest
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: ./Backend/package-lock.json
        
    - name: Install Dependencies
      run: npm ci
      working-directory: ./Backend

    - name: Generate package-lock.json if missing
      run: npm i --package-lock-only
      working-directory: ./Backend

    - name: Run Security Audit
      run: npm audit --audit-level=critical
      working-directory: ./Backend
      
    - name: Run Tests
      run: NODE_OPTIONS='--experimental-vm-modules' npx jest --runInBand
      working-directory: ./Backend

    - name: Build Solution
      run: npm run build
      working-directory: ./Backend
        
    - name: Deploy (Fake Deployment)
      run: echo "Deploying solution..."
